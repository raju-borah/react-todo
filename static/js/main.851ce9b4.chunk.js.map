{"version":3,"sources":["components/UI/SimpleContainer.js","components/form/SearchBar.js","components/list/SimpleList.js","App.js","index.js"],"names":["SimpleContainer","props","CssBaseline","Container","maxWidth","children","SearchBar","useState","task","setTask","useEffect","value","Paper","component","sx","p","display","alignItems","boxShadow","onSubmit","e","preventDefault","onAddTask","InputBase","ml","flex","placeholder","inputProps","onChange","event","target","IconButton","type","isEditingBtn","SimpleList","tasks","onRemoveTask","onEditedTask","List","width","bgcolor","marginTop","map","el","ListItem","ListItemAvatar","Avatar","ListItemText","primary","secondary","Button","variant","onClick","id","length","App","lists","localStorage","getItem","JSON","parse","getLocalData","taskLists","setTaskLists","isEditing","setIsEditing","editItem","setEditItem","setItem","stringify","style","color","todoTask","element","prevList","Math","random","toString","taskId","serachValue","filter","find","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.851ce9b4.chunk.js","sourcesContent":["import * as React from \"react\";\r\nimport CssBaseline from \"@mui/material/CssBaseline\";\r\nimport Container from \"@mui/material/Container\";\r\n\r\nexport default function SimpleContainer(props) {\r\n  return (\r\n    <React.Fragment>\r\n      <CssBaseline />\r\n      <Container maxWidth=\"sm\">{props.children}</Container>\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Paper from \"@mui/material/Paper\";\r\nimport InputBase from \"@mui/material/InputBase\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport AddTaskIcon from \"@mui/icons-material/AddTask\";\r\nimport EditIcon from \"@mui/icons-material/Edit\";\r\nexport default function SearchBar(props) {\r\n  const [task, setTask] = useState(\"\");\r\n  useEffect(() => {\r\n    setTask(props.value);\r\n  }, [props.value]);\r\n  return (\r\n    <Paper\r\n      component=\"form\"\r\n      sx={{\r\n        p: \"4px 4px\",\r\n        display: \"flex\",\r\n        alignItems: \"center\",\r\n        boxShadow: \"0px 0px 1px 1px green\",\r\n      }}\r\n      onSubmit={(e) => {\r\n        e.preventDefault();\r\n        props.onAddTask(task);\r\n        setTask(\"\");\r\n      }}\r\n    >\r\n      <InputBase\r\n        sx={{ ml: 1, flex: 1 }}\r\n        placeholder=\"Add Task\"\r\n        inputProps={{ \"aria-label\": \"Task\" }}\r\n        value={task}\r\n        onChange={(event) => setTask(event.target.value)}\r\n      />\r\n      <IconButton type=\"submit\" sx={{ p: \"10px\" }} aria-label=\"search\">\r\n        {props.isEditingBtn && <EditIcon />}\r\n        {!props.isEditingBtn && <AddTaskIcon />}\r\n      </IconButton>\r\n    </Paper>\r\n  );\r\n}\r\n","import * as React from \"react\";\r\nimport List from \"@mui/material/List\";\r\nimport ListItem from \"@mui/material/ListItem\";\r\nimport ListItemText from \"@mui/material/ListItemText\";\r\nimport ListItemAvatar from \"@mui/material/ListItemAvatar\";\r\nimport Avatar from \"@mui/material/Avatar\";\r\nimport AssignmentLateIcon from \"@mui/icons-material/AssignmentLate\";\r\nimport DeleteIcon from \"@mui/icons-material/Delete\";\r\nimport Button from \"@mui/material/Button\";\r\nimport EditIcon from \"@mui/icons-material/Edit\";\r\nexport default function SimpleList({ tasks, onRemoveTask, onEditedTask }) {\r\n  return (\r\n    <List\r\n      sx={{ width: \"100%\", bgcolor: \"background.paper\", marginTop: \"10px\" }}\r\n    >\r\n      {tasks.map((el) => (\r\n        <ListItem key={el.id}>\r\n          <ListItemAvatar>\r\n            <Avatar>\r\n              <AssignmentLateIcon />\r\n            </Avatar>\r\n          </ListItemAvatar>\r\n          <ListItemText primary={el.task} secondary=\"Jan 9, 2014\" />\r\n          <Button variant=\"text\" onClick={() => onEditedTask(el.id)}>\r\n            <EditIcon />\r\n          </Button>\r\n          <Button variant=\"text\" onClick={() => onRemoveTask(el.id)}>\r\n            <DeleteIcon />\r\n          </Button>\r\n        </ListItem>\r\n      ))}\r\n      {tasks.length === 0 && <ListItem key=\"no-todo\">No ToDo </ListItem>}\r\n    </List>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\nimport SimpleContainer from \"./components/UI/SimpleContainer\";\nimport SearchBar from \"./components/form/SearchBar\";\n\nimport SimpleList from \"./components/list/SimpleList\";\nfunction App() {\n  // get the localStorage data back\n  const getLocalData = () => {\n    const lists = localStorage.getItem(\"mytodolist\");\n\n    if (lists) {\n      return JSON.parse(lists);\n    } else {\n      return [];\n    }\n  };\n  const [taskLists, setTaskLists] = useState(getLocalData());\n  const [task, setTask] = useState(\"\");\n  const [isEditing, setIsEditing] = useState(false);\n  const [editItem, setEditItem] = useState(\"\");\n\n  // add task\n  const addTaskHandler = (todoTask) => {\n    if (isEditing) {\n      setTaskLists(\n        taskLists.map((element) => {\n          if (element.id === editItem) {\n            return { ...element, task: todoTask };\n          }\n          return element;\n        })\n      );\n    } else {\n      setTaskLists((prevList) => {\n        return [...prevList, { task: todoTask, id: Math.random().toString() }];\n      });\n    }\n    setTask(\"\");\n    setIsEditing(false);\n    setEditItem(\"\");\n  };\n  // remove task\n  const removeTaskHandler = (taskId) => {\n    const serachValue = taskLists.filter((element) => {\n      return element.id !== taskId;\n    });\n    setTaskLists(serachValue);\n  };\n  // edit task\n  const editTaskHandler = (taskId) => {\n    const serachValue = taskLists.find((element) => {\n      return element.id === taskId;\n    });\n\n    setTask(serachValue.task);\n    setIsEditing(true);\n    setEditItem(serachValue.id);\n  };\n  // adding localStorage\n  useEffect(() => {\n    localStorage.setItem(\"mytodolist\", JSON.stringify(taskLists));\n  }, [taskLists]);\n  return (\n    <>\n      <SimpleContainer>\n        <h1 style={{ color: \"white\" }}>TODO LIST</h1>\n        <SearchBar\n          onAddTask={addTaskHandler}\n          value={task}\n          isEditingBtn={isEditing}\n        ></SearchBar>\n        <SimpleList\n          tasks={taskLists}\n          onRemoveTask={removeTaskHandler}\n          onEditedTask={editTaskHandler}\n        ></SimpleList>\n      </SimpleContainer>\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);"],"sourceRoot":""}